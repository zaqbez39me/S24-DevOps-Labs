name: Python app CI
'on':
  push:
    paths:
      - app_python/**
      - .github/workflows/app_python.yaml
  pull_request:
    paths:
      - app_python/**
      - .github/workflows/app_python.yaml
defaults:
  run:
    working-directory: app_python
jobs:
  build_and_test:
    runs-on: ubuntu-20.04
    name: Build and Test
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: app_python/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  lint:
    runs-on: ubuntu-20.04
    name: Lint
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: pip
      - name: Linter
        run: |
          pip install flake8
          flake8 --max-complexity=10 main.py ../tests/test_main.py
  snyk:
    runs-on: ubuntu-20.04
    name: Snyk Vulnerability Checks
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Snyk
        uses: snyk/actions/python-3.10@master
        with:
          args: '--file=app_python/requirements.txt --skip-unresolved'
        env:
          SNYK_TOKEN: '${{ secrets.SNYK_TOKEN }}'
  docker-push:
    runs-on: ubuntu-20.04
    needs:
      - lint
      - snyk
    name: 'Login, Build and Push'
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: '${{ secrets.DOCKERHUB_USERNAME }}'
          password: '${{ secrets.DOCKERHUB_TOKEN }}'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: app_python
          file: ./app_python/Dockerfile
          push: true
          tags: '${{ secrets.DOCKERHUB_USERNAME }}/moscow-time-app:latest'
          cache-from: type=gha
          cache-to: 'type=gha,mode=max'
